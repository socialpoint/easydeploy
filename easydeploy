#! /usr/bin/python

import argparse
import re
import os
import sys
import json




parser = argparse.ArgumentParser(description='Deploy a package.')

parser.add_argument('-c', help='check if already installed (if alrady installed, dont install again)', action='store_true', default=False)
parser.add_argument('-u', help='dont update if already exists a version', action='store_false', default=True)
parser.add_argument('-i', help='dont install, only update cache', action='store_true', default=False)
parser.add_argument('-o', help='package options', type=str, default='')
parser.add_argument('-p', help='path inside package where install.sh is located', type=str, default='')
parser.add_argument('-b', help='branch to clone (only applies to git)', type=str, default='master')
parser.add_argument('url', help='url of the package to install (git, s3, http)')

args = parser.parse_args()

args.p = re.sub('^/*','', args.p)
args.p = re.sub('\.\.','', args.p)

print args

root = '/var/local/easydeploy'
cwd = os.getcwd()
cacheroot = root + '/cache'
tmpfolder = '/tmp/_tmp_easydeploy/' + str(os.getpid())
dbfile = root + '/db.json'
if (os.path.exists(dbfile)):
    f = open(dbfile, 'r')
    db = json.load(f)
    f.close()
else:
    db = json.loads('{}')

os.makedirs(tmpfolder)

url = args.url
cachepath = cacheroot + '/' + re.sub('[@:?/]+','/',url)
if re.match('s3://', url):
    print 's3'
    filename = tmpfolder + '/file.tar.gz'
    os.system('s3cmd get ' + url + ' ' + filename)
    os.system('rm -rf ' + cachepath)
    os.makedirs(cachepath)
    os.system('tar xvfz ' + filename + ' -C ' + cachepath)
elif re.match('http(s?)://', url):
    print 'http'
else:
    print 'git'
    if (os.path.exists(cachepath + '/.git')):
        if (args.u):
            os.chdir(cachepath)
            os.system('git reset --hard HEAD')
            os.system('git pull')
            os.system('git checkout ' + args.b)
            os.chdir(cwd)
    else:
        os.system('rm -rf ' + cachepath)
        os.makedirs(cachepath)
        os.system('git clone -b ' + args.b + ' ' + url + ' ' + cachepath)    

if (not args.i):
    os.chdir(cachepath)
    if (args.p):
        os.chdir(p)
    os.system('./install.sh ' + args.o)
    os.chdir(cwd)

f = open(dbfile, 'w')
json.dump(db, f)
f.close()

os.system('rm -rf ' + tmpfolder)